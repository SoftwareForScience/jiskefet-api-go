// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateFlpDto create flp dto
// swagger:model CreateFlpDto
type CreateFlpDto struct {

	// Name of the hostmachine, where the flp comes from.
	// Required: true
	FlpHostname *string `json:"flpHostname"`

	// Name of the flp
	// Required: true
	FlpName *string `json:"flpName"`

	// Attached run numbers of this log
	// Required: true
	Run *int64 `json:"run"`
}

// Validate validates this create flp dto
func (m *CreateFlpDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFlpHostname(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFlpName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRun(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateFlpDto) validateFlpHostname(formats strfmt.Registry) error {

	if err := validate.Required("flpHostname", "body", m.FlpHostname); err != nil {
		return err
	}

	return nil
}

func (m *CreateFlpDto) validateFlpName(formats strfmt.Registry) error {

	if err := validate.Required("flpName", "body", m.FlpName); err != nil {
		return err
	}

	return nil
}

func (m *CreateFlpDto) validateRun(formats strfmt.Registry) error {

	if err := validate.Required("run", "body", m.Run); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateFlpDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateFlpDto) UnmarshalBinary(b []byte) error {
	var res CreateFlpDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
