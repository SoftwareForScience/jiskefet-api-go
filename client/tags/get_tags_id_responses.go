// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetTagsIDReader is a Reader for the GetTagsID structure.
type GetTagsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTagsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetTagsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTagsIDOK creates a GetTagsIDOK with default headers values
func NewGetTagsIDOK() *GetTagsIDOK {
	return &GetTagsIDOK{}
}

/*GetTagsIDOK handles this case with default header values.

Successfully returned a specific Tag.
*/
type GetTagsIDOK struct {
}

func (o *GetTagsIDOK) Error() string {
	return fmt.Sprintf("[GET /tags/{id}][%d] getTagsIdOK ", 200)
}

func (o *GetTagsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsIDNotFound creates a GetTagsIDNotFound with default headers values
func NewGetTagsIDNotFound() *GetTagsIDNotFound {
	return &GetTagsIDNotFound{}
}

/*GetTagsIDNotFound handles this case with default header values.

There is no Tag with this.
*/
type GetTagsIDNotFound struct {
}

func (o *GetTagsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /tags/{id}][%d] getTagsIdNotFound ", 404)
}

func (o *GetTagsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
