// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PatchTagsIDLogsReader is a Reader for the PatchTagsIDLogs structure.
type PatchTagsIDLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchTagsIDLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchTagsIDLogsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPatchTagsIDLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPatchTagsIDLogsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchTagsIDLogsNoContent creates a PatchTagsIDLogsNoContent with default headers values
func NewPatchTagsIDLogsNoContent() *PatchTagsIDLogsNoContent {
	return &PatchTagsIDLogsNoContent{}
}

/*PatchTagsIDLogsNoContent handles this case with default header values.

Succesfully linked a Run to a Tag.
*/
type PatchTagsIDLogsNoContent struct {
}

func (o *PatchTagsIDLogsNoContent) Error() string {
	return fmt.Sprintf("[PATCH /tags/{id}/logs][%d] patchTagsIdLogsNoContent ", 204)
}

func (o *PatchTagsIDLogsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchTagsIDLogsNotFound creates a PatchTagsIDLogsNotFound with default headers values
func NewPatchTagsIDLogsNotFound() *PatchTagsIDLogsNotFound {
	return &PatchTagsIDLogsNotFound{}
}

/*PatchTagsIDLogsNotFound handles this case with default header values.

The Run or Tag does not exist.
*/
type PatchTagsIDLogsNotFound struct {
}

func (o *PatchTagsIDLogsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /tags/{id}/logs][%d] patchTagsIdLogsNotFound ", 404)
}

func (o *PatchTagsIDLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchTagsIDLogsConflict creates a PatchTagsIDLogsConflict with default headers values
func NewPatchTagsIDLogsConflict() *PatchTagsIDLogsConflict {
	return &PatchTagsIDLogsConflict{}
}

/*PatchTagsIDLogsConflict handles this case with default header values.

The Run is already linked to the Tag.
*/
type PatchTagsIDLogsConflict struct {
}

func (o *PatchTagsIDLogsConflict) Error() string {
	return fmt.Sprintf("[PATCH /tags/{id}/logs][%d] patchTagsIdLogsConflict ", 409)
}

func (o *PatchTagsIDLogsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
