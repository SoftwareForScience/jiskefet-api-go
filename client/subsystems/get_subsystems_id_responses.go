// Code generated by go-swagger; DO NOT EDIT.

package subsystems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetSubsystemsIDReader is a Reader for the GetSubsystemsID structure.
type GetSubsystemsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubsystemsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSubsystemsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetSubsystemsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSubsystemsIDOK creates a GetSubsystemsIDOK with default headers values
func NewGetSubsystemsIDOK() *GetSubsystemsIDOK {
	return &GetSubsystemsIDOK{}
}

/*GetSubsystemsIDOK handles this case with default header values.

Succesfully returned a Subsystem with given ID.
*/
type GetSubsystemsIDOK struct {
}

func (o *GetSubsystemsIDOK) Error() string {
	return fmt.Sprintf("[GET /subsystems/{id}][%d] getSubsystemsIdOK ", 200)
}

func (o *GetSubsystemsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubsystemsIDNotFound creates a GetSubsystemsIDNotFound with default headers values
func NewGetSubsystemsIDNotFound() *GetSubsystemsIDNotFound {
	return &GetSubsystemsIDNotFound{}
}

/*GetSubsystemsIDNotFound handles this case with default header values.

There is no Subsystem with the given ID.
*/
type GetSubsystemsIDNotFound struct {
}

func (o *GetSubsystemsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /subsystems/{id}][%d] getSubsystemsIdNotFound ", 404)
}

func (o *GetSubsystemsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
