// Code generated by go-swagger; DO NOT EDIT.

package setting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetSettingReader is a Reader for the GetSetting structure.
type GetSettingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSettingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSettingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetSettingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSettingOK creates a GetSettingOK with default headers values
func NewGetSettingOK() *GetSettingOK {
	return &GetSettingOK{}
}

/*GetSettingOK handles this case with default header values.

Succesfully returned the Settings.
*/
type GetSettingOK struct {
}

func (o *GetSettingOK) Error() string {
	return fmt.Sprintf("[GET /setting][%d] getSettingOK ", 200)
}

func (o *GetSettingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSettingNotFound creates a GetSettingNotFound with default headers values
func NewGetSettingNotFound() *GetSettingNotFound {
	return &GetSettingNotFound{}
}

/*GetSettingNotFound handles this case with default header values.

No Settings were found.
*/
type GetSettingNotFound struct {
}

func (o *GetSettingNotFound) Error() string {
	return fmt.Sprintf("[GET /setting][%d] getSettingNotFound ", 404)
}

func (o *GetSettingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
