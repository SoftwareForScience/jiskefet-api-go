// Code generated by go-swagger; DO NOT EDIT.

package runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PatchRunsIDLogsReader is a Reader for the PatchRunsIDLogs structure.
type PatchRunsIDLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchRunsIDLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPatchRunsIDLogsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPatchRunsIDLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPatchRunsIDLogsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchRunsIDLogsNoContent creates a PatchRunsIDLogsNoContent with default headers values
func NewPatchRunsIDLogsNoContent() *PatchRunsIDLogsNoContent {
	return &PatchRunsIDLogsNoContent{}
}

/*PatchRunsIDLogsNoContent handles this case with default header values.

The Log is successfully linked to the Run.
*/
type PatchRunsIDLogsNoContent struct {
}

func (o *PatchRunsIDLogsNoContent) Error() string {
	return fmt.Sprintf("[PATCH /runs/{id}/logs][%d] patchRunsIdLogsNoContent ", 204)
}

func (o *PatchRunsIDLogsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchRunsIDLogsNotFound creates a PatchRunsIDLogsNotFound with default headers values
func NewPatchRunsIDLogsNotFound() *PatchRunsIDLogsNotFound {
	return &PatchRunsIDLogsNotFound{}
}

/*PatchRunsIDLogsNotFound handles this case with default header values.

The Log or Run does not exist.
*/
type PatchRunsIDLogsNotFound struct {
}

func (o *PatchRunsIDLogsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /runs/{id}/logs][%d] patchRunsIdLogsNotFound ", 404)
}

func (o *PatchRunsIDLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchRunsIDLogsConflict creates a PatchRunsIDLogsConflict with default headers values
func NewPatchRunsIDLogsConflict() *PatchRunsIDLogsConflict {
	return &PatchRunsIDLogsConflict{}
}

/*PatchRunsIDLogsConflict handles this case with default header values.

The Log is already linked to the Run.
*/
type PatchRunsIDLogsConflict struct {
}

func (o *PatchRunsIDLogsConflict) Error() string {
	return fmt.Sprintf("[PATCH /runs/{id}/logs][%d] patchRunsIdLogsConflict ", 409)
}

func (o *PatchRunsIDLogsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
