// Code generated by go-swagger; DO NOT EDIT.

package flp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PatchFlpNameRunsIDReader is a Reader for the PatchFlpNameRunsID structure.
type PatchFlpNameRunsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchFlpNameRunsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchFlpNameRunsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPatchFlpNameRunsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchFlpNameRunsIDOK creates a PatchFlpNameRunsIDOK with default headers values
func NewPatchFlpNameRunsIDOK() *PatchFlpNameRunsIDOK {
	return &PatchFlpNameRunsIDOK{}
}

/*PatchFlpNameRunsIDOK handles this case with default header values.

Succesfully updated an FLP.
*/
type PatchFlpNameRunsIDOK struct {
}

func (o *PatchFlpNameRunsIDOK) Error() string {
	return fmt.Sprintf("[PATCH /flp/{name}/runs/{id}][%d] patchFlpNameRunsIdOK ", 200)
}

func (o *PatchFlpNameRunsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchFlpNameRunsIDNotFound creates a PatchFlpNameRunsIDNotFound with default headers values
func NewPatchFlpNameRunsIDNotFound() *PatchFlpNameRunsIDNotFound {
	return &PatchFlpNameRunsIDNotFound{}
}

/*PatchFlpNameRunsIDNotFound handles this case with default header values.

The Run number or/and FLP name does not exist.
*/
type PatchFlpNameRunsIDNotFound struct {
}

func (o *PatchFlpNameRunsIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /flp/{name}/runs/{id}][%d] patchFlpNameRunsIdNotFound ", 404)
}

func (o *PatchFlpNameRunsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
