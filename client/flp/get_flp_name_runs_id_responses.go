// Code generated by go-swagger; DO NOT EDIT.

package flp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFlpNameRunsIDReader is a Reader for the GetFlpNameRunsID structure.
type GetFlpNameRunsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlpNameRunsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFlpNameRunsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetFlpNameRunsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFlpNameRunsIDOK creates a GetFlpNameRunsIDOK with default headers values
func NewGetFlpNameRunsIDOK() *GetFlpNameRunsIDOK {
	return &GetFlpNameRunsIDOK{}
}

/*GetFlpNameRunsIDOK handles this case with default header values.

Succesfully returned an FLP.
*/
type GetFlpNameRunsIDOK struct {
}

func (o *GetFlpNameRunsIDOK) Error() string {
	return fmt.Sprintf("[GET /flp/{name}/runs/{id}][%d] getFlpNameRunsIdOK ", 200)
}

func (o *GetFlpNameRunsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFlpNameRunsIDNotFound creates a GetFlpNameRunsIDNotFound with default headers values
func NewGetFlpNameRunsIDNotFound() *GetFlpNameRunsIDNotFound {
	return &GetFlpNameRunsIDNotFound{}
}

/*GetFlpNameRunsIDNotFound handles this case with default header values.

There is no FLP for the Run with this run number.
*/
type GetFlpNameRunsIDNotFound struct {
}

func (o *GetFlpNameRunsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /flp/{name}/runs/{id}][%d] getFlpNameRunsIdNotFound ", 404)
}

func (o *GetFlpNameRunsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
