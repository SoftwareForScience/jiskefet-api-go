// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetUserProfileReader is a Reader for the GetUserProfile structure.
type GetUserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUserProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUserProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserProfileOK creates a GetUserProfileOK with default headers values
func NewGetUserProfileOK() *GetUserProfileOK {
	return &GetUserProfileOK{}
}

/*GetUserProfileOK handles this case with default header values.

User successfully received profile information.
*/
type GetUserProfileOK struct {
}

func (o *GetUserProfileOK) Error() string {
	return fmt.Sprintf("[GET /user/profile][%d] getUserProfileOK ", 200)
}

func (o *GetUserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileBadRequest creates a GetUserProfileBadRequest with default headers values
func NewGetUserProfileBadRequest() *GetUserProfileBadRequest {
	return &GetUserProfileBadRequest{}
}

/*GetUserProfileBadRequest handles this case with default header values.

No JWT could be found in headers.
*/
type GetUserProfileBadRequest struct {
}

func (o *GetUserProfileBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/profile][%d] getUserProfileBadRequest ", 400)
}

func (o *GetUserProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileUnauthorized creates a GetUserProfileUnauthorized with default headers values
func NewGetUserProfileUnauthorized() *GetUserProfileUnauthorized {
	return &GetUserProfileUnauthorized{}
}

/*GetUserProfileUnauthorized handles this case with default header values.

User is unauthorized
*/
type GetUserProfileUnauthorized struct {
}

func (o *GetUserProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/profile][%d] getUserProfileUnauthorized ", 401)
}

func (o *GetUserProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
