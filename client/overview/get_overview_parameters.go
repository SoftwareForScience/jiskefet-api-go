// Code generated by go-swagger; DO NOT EDIT.

package overview

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetOverviewParams creates a new GetOverviewParams object
// with the default values initialized.
func NewGetOverviewParams() *GetOverviewParams {
	var ()
	return &GetOverviewParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOverviewParamsWithTimeout creates a new GetOverviewParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOverviewParamsWithTimeout(timeout time.Duration) *GetOverviewParams {
	var ()
	return &GetOverviewParams{

		timeout: timeout,
	}
}

// NewGetOverviewParamsWithContext creates a new GetOverviewParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOverviewParamsWithContext(ctx context.Context) *GetOverviewParams {
	var ()
	return &GetOverviewParams{

		Context: ctx,
	}
}

// NewGetOverviewParamsWithHTTPClient creates a new GetOverviewParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOverviewParamsWithHTTPClient(client *http.Client) *GetOverviewParams {
	var ()
	return &GetOverviewParams{
		HTTPClient: client,
	}
}

/*GetOverviewParams contains all the parameters to send to the API endpoint
for the get overview operation typically these are written to a http.Request
*/
type GetOverviewParams struct {

	/*TimeRange
	  In which time range the logs of eachsubsystem should be posted

	*/
	TimeRange *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get overview params
func (o *GetOverviewParams) WithTimeout(timeout time.Duration) *GetOverviewParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get overview params
func (o *GetOverviewParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get overview params
func (o *GetOverviewParams) WithContext(ctx context.Context) *GetOverviewParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get overview params
func (o *GetOverviewParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get overview params
func (o *GetOverviewParams) WithHTTPClient(client *http.Client) *GetOverviewParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get overview params
func (o *GetOverviewParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTimeRange adds the timeRange to the get overview params
func (o *GetOverviewParams) WithTimeRange(timeRange *int64) *GetOverviewParams {
	o.SetTimeRange(timeRange)
	return o
}

// SetTimeRange adds the timeRange to the get overview params
func (o *GetOverviewParams) SetTimeRange(timeRange *int64) {
	o.TimeRange = timeRange
}

// WriteToRequest writes these params to a swagger request
func (o *GetOverviewParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.TimeRange != nil {

		// query param timeRange
		var qrTimeRange int64
		if o.TimeRange != nil {
			qrTimeRange = *o.TimeRange
		}
		qTimeRange := swag.FormatInt64(qrTimeRange)
		if qTimeRange != "" {
			if err := r.SetQueryParam("timeRange", qTimeRange); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
